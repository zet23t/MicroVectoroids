/*
Last Modified 28 April 2015
Generated by The Dot Factory, written by Eran Duchan, currently available at
http://www.eran.io/the-dot-factory-an-lcd-font-and-image-generator/
using the configuration xml included with this library. Just put the
configuration file in the same directory as the executable, and copy and paste
the output to the end of this file. Fonts that are not used are not included by
the compiler and do not take up any space on the microcontroller flash.
*/
#ifndef __LIB_FONT_VIRTUALDJ_H__
#define __LIB_FONT_VIRTUALDJ_H__

/*
**  Font data for Virtual DJ 5pt
*/

/* Character bitmaps for Virtual DJ 5pt */
static const unsigned char PROGMEM virtualDJ_5ptBitmaps[] =
{
	/* @0 ' ' (4 pixels wide) */
	//
	//
	//
	//
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

	/* @7 '!' (1 pixels wide) */
	//  # ###
	0x00, 0x80, 0x00, 0x80, 0x80, 0x80, 0x00,

	/* @14 '$' (5 pixels wide) */
	//  # ###
	//  # # #
	// ## # ##
	//  # # #
	//  ### #
	0x20, 0xF8, 0x08, 0xF8, 0x80, 0xF8, 0x20,

	/* @21 '%' (5 pixels wide) */
	//  #   #
	//   #
	//    #
	//     #
	//  #   #
	0x00, 0x88, 0x40, 0x20, 0x10, 0x88, 0x00,

	/* @28 ',' (1 pixels wide) */
	// ##
	0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,

	/* @35 '-' (3 pixels wide) */
	//    #
	//    #
	//    #
	0x00, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x00,

	/* @42 '.' (1 pixels wide) */
	//  #
	0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,

	/* @49 '0' (5 pixels wide) */
	//  #####
	//  #   #
	//  #   #
	//  #   #
	//  #####
	0x00, 0xF8, 0x88, 0x88, 0x88, 0xF8, 0x00,

	/* @56 '1' (2 pixels wide) */
	//      #
	//  #####
	0x00, 0x40, 0x40, 0x40, 0x40, 0xC0, 0x00,

	/* @63 '2' (5 pixels wide) */
	//  ### #
	//  # # #
	//  # # #
	//  # # #
	//  # ##
	0x00, 0xF8, 0x80, 0xF8, 0x08, 0xF0, 0x00,

	/* @70 '3' (5 pixels wide) */
	//  #   #
	//  # # #
	//  # # #
	//  # # #
	//  ####
	0x00, 0xF8, 0x08, 0x78, 0x08, 0xF0, 0x00,

	/* @77 '4' (5 pixels wide) */
	//    ###
	//    #
	//    #
	//    #
	//  #####
	0x00, 0x08, 0x08, 0xF8, 0x88, 0x88, 0x00,

	/* @84 '5' (5 pixels wide) */
	//  # ###
	//  # # #
	//  # # #
	//  # # #
	//  ### #
	0x00, 0xF8, 0x08, 0xF8, 0x80, 0xF8, 0x00,

	/* @91 '6' (5 pixels wide) */
	//  #####
	//  # # #
	//  # # #
	//  # # #
	//  ### #
	0x00, 0xF8, 0x88, 0xF8, 0x80, 0xF8, 0x00,

	/* @98 '7' (4 pixels wide) */
	//      #
	//      #
	//      #
	//  #####
	0x00, 0x10, 0x10, 0x10, 0x10, 0xF0, 0x00,

	/* @105 '8' (5 pixels wide) */
	//  #####
	//  # # #
	//  # # #
	//  # # #
	//  ####
	0x00, 0xF8, 0x88, 0xF8, 0x88, 0xF0, 0x00,

	/* @112 '9' (5 pixels wide) */
	//  # ###
	//  # # #
	//  # # #
	//  # # #
	//  #####
	0x00, 0xF8, 0x08, 0xF8, 0x88, 0xF8, 0x00,

	/* @119 ':' (1 pixels wide) */
	//   # #
	0x00, 0x00, 0x80, 0x00, 0x80, 0x00, 0x00,

	/* @126 '<' (3 pixels wide) */
	//    #
	//   # #
	//  #   #
	0x00, 0x20, 0x40, 0x80, 0x40, 0x20, 0x00,

	/* @133 '=' (4 pixels wide) */
	//   # #
	//   # #
	//   # #
	//   # #
	0x00, 0x00, 0xF0, 0x00, 0xF0, 0x00, 0x00,

	/* @140 '>' (3 pixels wide) */
	//  #   #
	//   # #
	//    #
	0x00, 0x80, 0x40, 0x20, 0x40, 0x80, 0x00,

	/* @147 '?' (5 pixels wide) */
	//      #
	//      #
	//  # # #
	//    # #
	//    ###
	0x00, 0x20, 0x00, 0x38, 0x08, 0xF8, 0x00,

	/* @154 'a' (5 pixels wide) */
	//  #####
	//    # #
	//    # #
	//    # #
	//  ####
	0x00, 0x88, 0x88, 0xF8, 0x88, 0xF0, 0x00,

	/* @161 'b' (5 pixels wide) */
	//  #####
	//  # # #
	//  # # #
	//  # # #
	//  ## #
	0x00, 0xF8, 0x88, 0xF0, 0x88, 0xF0, 0x00,

	/* @168 'c' (5 pixels wide) */
	//  #####
	//  #   #
	//  #   #
	//  #   #
	//  #   #
	0x00, 0xF8, 0x80, 0x80, 0x80, 0xF8, 0x00,

	/* @175 'd' (5 pixels wide) */
	//  #####
	//  #   #
	//  #   #
	//  #   #
	//   ###
	0x00, 0xF0, 0x88, 0x88, 0x88, 0xF0, 0x00,

	/* @182 'e' (5 pixels wide) */
	//  #####
	//  # # #
	//  # # #
	//  # # #
	//  #   #
	0x00, 0xF8, 0x80, 0xF0, 0x80, 0xF8, 0x00,

	/* @189 'f' (5 pixels wide) */
	//  #####
	//    # #
	//    # #
	//    # #
	//      #
	0x00, 0x80, 0x80, 0xF0, 0x80, 0xF8, 0x00,

	/* @196 'g' (5 pixels wide) */
	//  #####
	//  #   #
	//  # # #
	//  # # #
	//  ### #
	0x00, 0xF8, 0x88, 0xB8, 0x80, 0xF8, 0x00,

	/* @203 'h' (5 pixels wide) */
	//  #####
	//    #
	//    #
	//    #
	//  #####
	0x00, 0x88, 0x88, 0xF8, 0x88, 0x88, 0x00,

	/* @210 'i' (1 pixels wide) */
	//  #####
	0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00,

	/* @217 'j' (4 pixels wide) */
	//  #
	//  #
	//  #
	//  #####
	0x00, 0xF0, 0x10, 0x10, 0x10, 0x10, 0x00,

	/* @224 'k' (5 pixels wide) */
	//  #####
	//    #
	//    #
	//    #
	//  ## ##
	0x00, 0x88, 0x88, 0xF0, 0x88, 0x88, 0x00,

	/* @231 'l' (4 pixels wide) */
	//  #####
	//  #
	//  #
	//  #
	0x00, 0xF0, 0x80, 0x80, 0x80, 0x80, 0x00,

	/* @238 'm' (7 pixels wide) */
	//  #####
	//      #
	//      #
	//  #####
	//      #
	//      #
	//  ####
	0x00, 0x92, 0x92, 0x92, 0x92, 0xFC, 0x00,

	/* @245 'n' (5 pixels wide) */
	//  #####
	//      #
	//      #
	//      #
	//  ####
	0x00, 0x88, 0x88, 0x88, 0x88, 0xF0, 0x00,

	/* @252 'o' (5 pixels wide) */
	//  #####
	//  #   #
	//  #   #
	//  #   #
	//  ####
	0x00, 0xF8, 0x88, 0x88, 0x88, 0xF0, 0x00,

	/* @259 'p' (5 pixels wide) */
	//  #####
	//    # #
	//    # #
	//    # #
	//    ##
	0x00, 0x80, 0x80, 0xF8, 0x88, 0xF0, 0x00,

	/* @266 'q' (5 pixels wide) */
	//  #####
	//  #   #
	// ##   #
	//  #   #
	//  ####
	0x20, 0xF8, 0x88, 0x88, 0x88, 0xF0, 0x00,

	/* @273 'r' (5 pixels wide) */
	//  #####
	//    # #
	//    # #
	//    # #
	//  ## #
	0x00, 0x88, 0x88, 0xF0, 0x88, 0xF0, 0x00,

	/* @280 's' (5 pixels wide) */
	//  # ###
	//  # # #
	//  # # #
	//  # # #
	//  ### #
	0x00, 0xF8, 0x08, 0xF8, 0x80, 0xF8, 0x00,

	/* @287 't' (5 pixels wide) */
	//      #
	//      #
	//  #####
	//      #
	//      #
	0x00, 0x20, 0x20, 0x20, 0x20, 0xF8, 0x00,

	/* @294 'u' (5 pixels wide) */
	//  #####
	//  #
	//  #
	//  #
	//  #####
	0x00, 0xF8, 0x88, 0x88, 0x88, 0x88, 0x00,

	/* @301 'v' (5 pixels wide) */
	//   ####
	//  #
	//  #
	//  #
	//   ####
	0x00, 0x70, 0x88, 0x88, 0x88, 0x88, 0x00,

	/* @308 'w' (7 pixels wide) */
	//  #####
	//  #
	//  #
	//  #####
	//  #
	//  #
	//  #####
	0x00, 0xFE, 0x92, 0x92, 0x92, 0x92, 0x00,

	/* @315 'x' (5 pixels wide) */
	//  ## ##
	//    #
	//    #
	//    #
	//  ## ##
	0x00, 0x88, 0x88, 0x70, 0x88, 0x88, 0x00,

	/* @322 'y' (5 pixels wide) */
	//  # ###
	//  # #
	//  # #
	//  # #
	//  #####
	0x00, 0xF8, 0x08, 0xF8, 0x88, 0x88, 0x00,

	/* @329 'z' (5 pixels wide) */
	//  ##  #
	//  # # #
	//  # # #
	//  # # #
	//  #  ##
	0x00, 0xF8, 0x80, 0x70, 0x08, 0xF8, 0x00,
};

/* Character descriptors for Virtual DJ 5pt */
/* { [Char width in bits], [Offset into virtualDJ_5ptCharBitmaps in bytes] } */
static const FONT_CHAR_INFO PROGMEM virtualDJ_5ptDescriptors[] =
{
	{4, 0}, 		/*   */
	{1, 7}, 		/* ! */
	{0, 0}, 		/* " */
	{0, 0}, 		/* # */
	{5, 14}, 		/* $ */
	{5, 21}, 		/* % */
	{0, 0}, 		/* & */
	{0, 0}, 		/* ' */
	{0, 0}, 		/* ( */
	{0, 0}, 		/* ) */
	{0, 0}, 		/* * */
	{0, 0}, 		/* + */
	{1, 28}, 		/* , */
	{3, 35}, 		/* - */
	{1, 42}, 		/* . */
	{0, 0}, 		/* / */
	{5, 49}, 		/* 0 */
	{2, 56}, 		/* 1 */
	{5, 63}, 		/* 2 */
	{5, 70}, 		/* 3 */
	{5, 77}, 		/* 4 */
	{5, 84}, 		/* 5 */
	{5, 91}, 		/* 6 */
	{4, 98}, 		/* 7 */
	{5, 105}, 		/* 8 */
	{5, 112}, 		/* 9 */
	{1, 119}, 		/* : */
	{0, 0}, 		/* ; */
	{3, 126}, 		/* < */
	{4, 133}, 		/* = */
	{3, 140}, 		/* > */
	{5, 147}, 		/* ? */
	{0, 0}, 		/* @ */
	{0, 0}, 		/* A */
	{0, 0}, 		/* B */
	{0, 0}, 		/* C */
	{0, 0}, 		/* D */
	{0, 0}, 		/* E */
	{0, 0}, 		/* F */
	{0, 0}, 		/* G */
	{0, 0}, 		/* H */
	{0, 0}, 		/* I */
	{0, 0}, 		/* J */
	{0, 0}, 		/* K */
	{0, 0}, 		/* L */
	{0, 0}, 		/* M */
	{0, 0}, 		/* N */
	{0, 0}, 		/* O */
	{0, 0}, 		/* P */
	{0, 0}, 		/* Q */
	{0, 0}, 		/* R */
	{0, 0}, 		/* S */
	{0, 0}, 		/* T */
	{0, 0}, 		/* U */
	{0, 0}, 		/* V */
	{0, 0}, 		/* W */
	{0, 0}, 		/* X */
	{0, 0}, 		/* Y */
	{0, 0}, 		/* Z */
	{0, 0}, 		/* [ */
	{0, 0}, 		/* \ */
	{0, 0}, 		/* ] */
	{0, 0}, 		/* ^ */
	{0, 0}, 		/* _ */
	{0, 0}, 		/* ` */
	{5, 154}, 		/* a */
	{5, 161}, 		/* b */
	{5, 168}, 		/* c */
	{5, 175}, 		/* d */
	{5, 182}, 		/* e */
	{5, 189}, 		/* f */
	{5, 196}, 		/* g */
	{5, 203}, 		/* h */
	{1, 210}, 		/* i */
	{4, 217}, 		/* j */
	{5, 224}, 		/* k */
	{4, 231}, 		/* l */
	{7, 238}, 		/* m */
	{5, 245}, 		/* n */
	{5, 252}, 		/* o */
	{5, 259}, 		/* p */
	{5, 266}, 		/* q */
	{5, 273}, 		/* r */
	{5, 280}, 		/* s */
	{5, 287}, 		/* t */
	{5, 294}, 		/* u */
	{5, 301}, 		/* v */
	{7, 308}, 		/* w */
	{5, 315}, 		/* x */
	{5, 322}, 		/* y */
	{5, 329}, 		/* z */
};

/* Font information for Virtual DJ 5pt */
static const FONT_INFO virtualDJ_5ptFontInfo =
{
	7, /*  Character height */
	' ', /*  Start character */
	'z', /*  End character */
	virtualDJ_5ptDescriptors, /*  Character descriptor array */
	virtualDJ_5ptBitmaps, /*  Character bitmap array */
};


#endif // __LIB_FONT_VIRTUALDJ_H__
